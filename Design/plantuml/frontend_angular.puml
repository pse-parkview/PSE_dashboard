@startuml frontend_angular

skinparam linetype ortho

package ui {
    class AppComponent {
    }

    class HeaderComponent {
    }

    class SideBarComponent {
    }

    package sideBar {
        class SideBenchmarkSelectComponent {
        }

        class SideCurrentChosenCommitComponent {
        }

        class SidePreviousPlotsComponent {
        }

        package miniPlotCards {
            interface PlotCardComponent {
            }

            class PlotTypeACardComponent {
            }

            PlotCardComponent <|.. PlotTypeACardComponent
        }

        SidePreviousPlotsComponent "1" *-- "*" PlotCardComponent
    }

    package mainContent {
        class AveragePerformanceComponent {
        }

        class GitHistoryComponent {
        }

        package plots {
            class ScatterPlotComponent {
            }
            class PerformanceProfilePlotComponent {
            }
            class BarPlotComponent {
            }
            class ConvergencePlotComponent {
            }
        }
        AppComponent .d.> AveragePerformanceComponent
        AppComponent .d.> GitHistoryComponent
        AppComponent .d.> ScatterPlotComponent
        AppComponent .d.> PerformanceProfilePlotComponent
        AppComponent .d.> BarPlotComponent
        AppComponent .d.> ConvergencePlotComponent
    }

    package dialogs {
        class PlotConfigurationDialogComponent {
        }
    }

    AppComponent "1" *-- "1" HeaderComponent
    AppComponent "1" *-- "1" SideBarComponent

    SideBarComponent "1" *-- "1" SideBenchmarkSelectComponent
    SideBarComponent "1" *-- "1" SideCurrentChosenCommitComponent
    SideBarComponent "1" *-- "1" SidePreviousPlotsComponent

}

package datahandler {
    class DataPointService {
        List<Commit> getCommitHistory(branch: String, device: String, benchmark: String)

    }

    class DatapointSelection {
    }

    class DataPoint {
        string commitSha
        string benchmarkId???
    }

    interface Benchmark {
    }


    class ConcreteSpMVResult {}
    note left : Add more benchmarks here


    Benchmark <|.. ConcreteSpMVResult

    DatapointSelection "1" o- "*" DataPoint
    ' DatapointSelection --> RestHandler
}

package plotter {

    class PlotService {
        generateScatterPlot(benchmark : ScatterPlottable) :  BubbleChartMultiSeries
        generatePerfomanceProfilePlot(benchmark : PerformanceProfilePlottable :  MultiSeries
        generateConvergencePlot(benchmark : ConvergencePlottable) :  MultiSeries
        generateBarPlot(benchmark : BarPlottable) :  MultiSeries
    }

    ' Plot Types: ScatterPlot, (SmoothedScatterPlot), PerformanceProfile, BarPlot, ConvergencePlot

    interface ScatterPlottable {
        getScatterPlotData()
    }

    interface PerformanceProfilePlottable {
        getPerformanceProfileData()
    }

    interface BarPlottable {
        getBarPlotData()
    }

    interface ConvergencePlottable {
       getConvergencePlotData()
    }

    class ScatterPlot {}
    class PerformancePlot {}
    class BarPlot {}
    class ConvergencePlot {}

    PlotService ..> ScatterPlot
    PlotService ..> PerformancePlot
    PlotService ..> BarPlot
    PlotService ..> ConvergencePlot

    ScatterPlot -- ScatterPlottable
    ConvergencePlot -- ConvergencePlottable
    BarPlot -- BarPlottable
    PerformancePlot -- PerformanceProfilePlottable

    ConcreteSpMVResult ..|> ScatterPlottable
    ConcreteSpMVResult ..|> BarPlottable

}


PlotService --> DataPointService
PlotService -u- ScatterPlotComponent
PlotService -u- PerformanceProfilePlotComponent
PlotService -u- BarPlotComponent
PlotService -u- ConvergencePlotComponent

@enduml
