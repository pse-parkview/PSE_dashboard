@startuml frontend_angular

skinparam linetype ortho

package ui {
    class AppComponent
    class HeaderComponent
    class SideBarComponent

    package sideBar {
        class SideBenchmarkSelectComponent
        class SideCurrentChosenCommitComponent
        class SidePreviousPlotsComponent

        class PlotCardComponent
    }

    package mainContent {
        class AveragePerformanceComponent
        class GitHistoryComponent

        class PlotComponent
    }

    package plots {
        class ScatterPlotComponent
        class PerformanceProfilePlotComponent
        class BarPlotComponent
        class ConvergencePlotComponent
    }

    package dialogs {
        class PlotConfigurationDialogComponent
    }

    AppComponent "1" *-- "1" HeaderComponent
    AppComponent "1" *-- "1" SideBarComponent


    AppComponent .d.> AveragePerformanceComponent : routes to
    AppComponent .d.> GitHistoryComponent : routes to
    AppComponent .d.> PlotComponent : routes to

    SideBarComponent "1" *-- "1" SideBenchmarkSelectComponent
    SideBarComponent "1" *-- "1" SideCurrentChosenCommitComponent
    SideBarComponent "1" *-- "1" SidePreviousPlotsComponent

    SidePreviousPlotsComponent "1" *-- "*" PlotCardComponent
    SideBenchmarkSelectComponent .u.> PlotConfigurationDialogComponent : calls

    PlotComponent .d..> ScatterPlotComponent :<<uses>>
    PlotComponent .d..> PerformanceProfilePlotComponent :<<uses>>
    PlotComponent .d..> BarPlotComponent :<<uses>>
    PlotComponent .d..> ConvergencePlotComponent :<<uses>>

    PlotCardComponent .d..> ScatterPlotComponent :<<uses>
    PlotCardComponent .d..> PerformanceProfilePlotComponent :<<uses>
    PlotCardComponent .d..> BarPlotComponent :<<uses>
    PlotCardComponent .d..> ConvergencePlotComponent :<<uses>

}

package datahandler {
    class DataPointService {
        List<Commit> getCommitHistory(branch: String, device: String, benchmark: String)

    }

    class DatapointSelection {
    }

    class DataPoint {
        string commitSha
        string benchmarkId???
    }

    interface Benchmark

    interface MatrixBenchmark

    class SpMVResult
    class ConversionResult
    class SolverResult
    class PerconditionerResult
    class BLASResult

    Benchmark <|.. MatrixBenchmark : <<extends>>
    MatrixBenchmark <|.. SpMVResult
    MatrixBenchmark <|.. ConversionResult
    MatrixBenchmark <|.. SolverResult
    MatrixBenchmark <|.. PerconditionerResult
    Benchmark <|.. BLASResult


    DatapointSelection "1" o- "*" DataPoint
    ' DatapointSelection --> RestHandler
}

package plotter {

    class PlotService {
        generateScatterPlot(benchmark : ScatterPlottable) :  BubbleChartMultiSeries
        generatePerfomanceProfilePlot(benchmark : PerformanceProfilePlottable :  MultiSeries
        generateConvergencePlot(benchmark : ConvergencePlottable) :  MultiSeries
        generateBarPlot(benchmark : BarPlottable) :  MultiSeries
    }

    ' Plot Types: ScatterPlot, (SmoothedScatterPlot), PerformanceProfile, BarPlot, ConvergencePlot

    interface ScatterPlottable {
        getScatterPlotData()
    }

    interface PerformanceProfilePlottable {
        getPerformanceProfileData()
    }

    interface BarPlottable {
        getBarPlotData()
    }

    interface ConvergencePlottable {
       getConvergencePlotData()
    }

    class ScatterPlot
    class PerformancePlot
    class BarPlot
    class ConvergencePlot

    PlotService ..> ScatterPlot
    PlotService ..> PerformancePlot
    PlotService ..> BarPlot
    PlotService ..> ConvergencePlot

    ScatterPlot -- ScatterPlottable
    ConvergencePlot -- ConvergencePlottable
    BarPlot -- BarPlottable
    PerformancePlot -- PerformanceProfilePlottable

    SpMVResult ..|> ScatterPlottable
    SpMVResult ..|> BarPlottable

}


PlotService --> DataPointService
PlotService <-u- ScatterPlotComponent
PlotService <-u- PerformanceProfilePlotComponent
PlotService <-u- BarPlotComponent
PlotService <-u- ConvergencePlotComponent

@enduml
