@startuml frontend

'maybe wihtout linetype ortho its more readable 
'edit: no
skinparam linetype ortho

package ui {
    class AppComponent
    class HeaderComponent
    class SideBarComponent

    package sideBar {
        'inspired by ui
        class SideCurrentChosenCommitComponent
        'inspired by scenario, spawns BenchmarkSelectDialogComponent
        class SideBenchmarkSelectComponent {
            spawnBenchmarkSelectDialog() : void
        }
        'inspired by scenario, spawns BenchmarkCompareDialogComponent
        class SideBenchmarkCompareComponent {
            spawnBenchmarkCompareDialog() : void
        }
        'inspired by scenario
        class SideLoadFromTemplateComponent {
            spawnLoadFromTemplateDialog() : void
        }
        'inspired by mockup
        class SidePreviousPlotsComponent

        'contained within SidePreviousPlotsCopmonent
        class PlotCardComponent

        SidePreviousPlotsComponent "1" *-- "*" PlotCardComponent
    }

    package mainContent {
        'inspired by mockup, purpose or functionality not yet clear
        class AveragePerformanceComponent
        'inspired by mockup
        class GitHistoryComponent
        
        class SingleBenchmarkPlotComponent
        class BenchmarkComparisonPlotComponent
    }

    package plotviews {
        class ScatterPlotComponent
        class LinePlotComponent
        class BarPlotComponent
        class SummaryChartComponent
    }

    package dialogs {
        class PlotConfigurationDialogComponent {
            routeToPlotView()
        }
        class BenchmarkSelectDialogComponent {
            @Input configurePlot: boolean;
            spawnPlotConfigurationDialog()
        }
        class LoadFromTemplateDialogComponent {
            spawnPlotConfigurationDialog()
        }
        class ErrorDialogComponent
        class CookieConsentDialogComponent
        class BenchmarkCompareDialogComponent {
            spawnPlotConfigurationDialog()
        }
    }

    AppComponent "1" *-- "1" HeaderComponent
    AppComponent "1" *-- "1" SideBarComponent

    AppComponent .d.> AveragePerformanceComponent : routes to
    AppComponent .d.> GitHistoryComponent : routes to
    AppComponent .d.> SingleBenchmarkPlotComponent : routes to
    AppComponent .d.> BenchmarkComparisonPlotComponent : routes to

    SideBarComponent "1" *-- "1" SideCurrentChosenCommitComponent
    SideBarComponent "1" *-- "1" SideBenchmarkSelectComponent
    SideBarComponent "1" *-- "1" SideBenchmarkCompareComponent
    SideBarComponent "1" *-- "1" SideLoadFromTemplateComponent
    SideBarComponent "1" *-- "1" SidePreviousPlotsComponent


    SideBenchmarkSelectComponent .d.> PlotConfigurationDialogComponent : calls
    SideBenchmarkSelectComponent .d.> BenchmarkSelectDialogComponent : calls
    SideBenchmarkCompareComponent .d.> BenchmarkSelectDialogComponent : calls
    SideLoadFromTemplateComponent .d.> LoadFromTemplateDialogComponent : calls

    BenchmarkSelectDialogComponent .u.> PlotConfigurationDialogComponent : calls
    BenchmarkCompareDialogComponent .u.> PlotConfigurationDialogComponent : calls

    PlotConfigurationDialogComponent ...> SingleBenchmarkPlotComponent : routes to
    PlotConfigurationDialogComponent ...> BenchmarkComparisonPlotComponent : routes to

    LoadFromTemplateDialogComponent ...> SingleBenchmarkPlotComponent : routes to
    LoadFromTemplateDialogComponent ...> BenchmarkComparisonPlotComponent : routes to

    SingleBenchmarkPlotComponent .d..> ScatterPlotComponent :<<uses>>
    SingleBenchmarkPlotComponent .d..> LinePlotComponent :<<uses>>
    SingleBenchmarkPlotComponent .d..> BarPlotComponent :<<uses>>
    SingleBenchmarkPlotComponent .d..> SummaryChartComponent :<<uses>>

    BenchmarkComparisonPlotComponent .d..> LinePlotComponent :<<uses>>
    BenchmarkComparisonPlotComponent .d..> ScatterPlotComponent :<<uses>>
    
    PlotCardComponent .d..> ScatterPlotComponent :<<uses>>
    PlotCardComponent .d..> LinePlotComponent :<<uses>>
    PlotCardComponent .d..> BarPlotComponent :<<uses>>
}

package datahandler {
    class DataService {
        getBranchNames(): string[]
        getCommitHistory(branch: String): Commit[]
        getBenchmarks<T extends Benchmark>(Commit[] commits): T[]
        getBenchmarkComparison(b1 : Benchmark, b2 : Benchmark): BenchmarkComparison
    }

    interface Commit {
        get date() : Date
        get commitMessage() : string
        get author() : string
        get hasBenchmark() : boolean
        get sha() : string
        get branch() : string
    }

    interface DataPoint {
        get name() : string
        get x() : string
        get y() : double
    }

    interface Summary {
        getSummary() : Map<K, V>
        getAmountTested() : int
    }

    together {
        'The different benchmark types implement benchmark
        interface Benchmark {
            get name() : string
            get commit() : Commit
            get device() : string
            get summary() : Summary
            get type() : BenchmarkType
        }

        interface BenchmarkType {
            get name() : string
            get validXKeys() : string[]
            get validYKeys() : string[]
        }

        interface BenchmarkComparison {
            get benchmarks() : Benchmark[]
            get plotTypes() : PlotTypes[]
        }

        class ConversionBenchmark implements Benchmark
        class ConversionComparison implements BenchmarkComparison
        class SpmvBenchmark implements Benchmark
        class SpmvComparison implements BenchmarkComparison
        class SolverBenchmark implements Benchmark
        class SolverComparison implements BenchmarkComparison
        class PreconditionerBenchmark implements Benchmark
        class PreconditionerComparison implements BenchmarkComparison
        class BlasBenchmark implements Benchmark
        class BlasComparison implements BenchmarkComparison
    }
    
    DataService ...> DataPoint
    DataService ...> Commit
    DataService ...> Benchmark
    DataService ...> BenchmarkComparison
    
}

package plotter {

    class PlotService {
        generateScatterPlot(benchmark : Benchmark, device : string, plotType : ScatterPlottable) :  BubbleChartMultiSeries
        generateLinePlot(benchmark : Benchmark, device : string, plotType : LinePlottable :  MultiSeries
        generateBarPlot(benchmark : Benchmark, device : string, plotType : BarPlottable) :  MultiSeries

        generateScatterPlot(comparison : BenchmarkComparison, device : string, plotType : ScatterPlottable) :  BubbleChartMultiSeries
        generateLinePlot(comparison : BenchmarkComparison, device : string, plotType : LinePlottable :  MultiSeries

        compileConfiguration(benchmark: Benchmark, device : string, plotType: PlotType) : PlotConfiguration
        generateScatterPlotBasedOnConfig(p : PlotConfiguration): BubbleChartMultiSeries
        generateLinePlotBasedOnConfig(p : PlotConfiguration): MultiSeries
        generateBarPlotBasedOnConfig(p : PlotConfiguration): MultiSeries
    }

    class PlotConfiguration() {
        get benchmarkCommitSha : string
        get device : string
        plotType : string
    }

    interface PlotType {
        get name() : string
        get xAxisName() : string
        get yAxisName() : string
    }

    interface ScatterPlottable extends PlotType {
        getScatterPlotData():  BubbleChartMultiSeries
    }

    interface LinePlottable extends PlotType {
        getLinePlotData(): MultiSeries
    }

    interface BarPlottable extends PlotType {
        getBarPlotData(): MultiSeries
    }
}

package cookies {
    class CookieService {
        saveConsent(given: boolean): void
        hasDecidedConsent() : boolean
        getConsent() : boolean
        savePlotConfiguration(p: PlotConfiguration): void
        appendRecentPlotConfiguration(PlotConfiguration): void
        getSavedPlotConfigurations(): PlotConfiguration[]
        getRecentPlotConfigurations(): PlotConfiguration[]
    }
}

CookieService <-- AppComponent
CookieService <-- CookieConsentDialogComponent
CookieService <-- SidePreviousPlotsComponent
CookieService <-- SideLoadFromTemplateComponent

DataService <--- BenchmarkSelectDialogComponent

DataService <--- SingleBenchmarkPlotComponent
DataService <--- BenchmarkComparisonPlotComponent
DataService <--- GitHistoryComponent
DataService <--- AveragePerformanceComponent

PlotService --> DataService

PlotService <-- PlotCardComponent

PlotService <-u- ScatterPlotComponent
PlotService <-u- LinePlotComponent
PlotService <-u- BarPlotComponent
PlotService <-u- SummaryChartComponent

@enduml